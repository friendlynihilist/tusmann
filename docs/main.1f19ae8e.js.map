{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","node_modules/regenerator-runtime/runtime-module.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","article-parser.js","main.js"],"names":["parseArticle","article","fetch","articleResponse","text","articleHtml","parser","DOMParser","articleDocument","parseFromString","body","querySelector","articleURL","URL","window","location","href","pageURL","articlePath","pathname","substring","lastIndexOf","querySelectorAll","forEach","image","url","src","origin","split","title","addArticle","console","log","elementsToDelete","document","node","classList","add","className","replace","container","nodes","Array","from","childNodes","appendChild","readerActivation","addEventListener","onclick","docsList","docsSelection","closeDocs","v","docsHidden","docsHiddenFromMenu","mainElement","openMenu","closeMenu","closeDocMenu","toggleNavBar","toggle"],"mappings":"AGAA,ADAA,ADAA;AECA,ADAA,ADAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AKHA,AFKA,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AKRA,AFUA,AFAA,ADDA;AKNA,AFQA,AFAA,ADDA;AGEA,AFAA,ADDA,SKPe8B;ADHf,ADYA,AFAA,ADDA;AIVA,ADYA,AFAA,ADDA;AGEA,AFAA,ADDA,SIVe9B;ADYf,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA;AGEA,AFAA,ADDA,4BKdA;AAAA,AFgBA,AFAA,ADDA;AKfA,AFiBA,AFAA,ADDA;AKhBA,AFkBA,AFAA,ADDA,4BIjBA,iBAA4BC,OAA5B;AAAA,ACAA,AFmBA,AFAA,ADDA;AIlBA,ACAA,AFoBA,AFAA,ADDA;AInBA,ACAA,AFqBA,AFAA,ADDA;AIpBA,ACAA,AFsBA,AFAA,ADDA,mBKpBwB,iCAAa,uCAAb,CADxB;ADAA,ADuBA,AFAA,ADDA;AItBA,ACAA,AFwBA,AFAA,ADDA;AIvBA,ACCQA,AFwBR,AFAA,ADDA,YKvBQA,ODE0BC,ACHlC,KDGuC,CAACD,OAAD,CAHvC;ACGI8B,AFuBJ,AFAA,ADDA,YKtBIA,OAAO,CAACC,GAAR,CAAY/B,OAAZ,EAHJ,CAKI;ADLJ,AD2BA,AFAA,ADDA;AIvBUE,ACGA8B,AFsBV,AFAA,ADDA,YIxBU9B,ACGA8B,eDNV,CCAA,GAM6BC,QAAQ,CAACZ,gBAAT,CAA0B,mBAA1B,CAN7B;ADAA,ACOIW,AFsBJ,AFAA,ADDA,YKrBIA,gBAAgB,CAACV,OAAjB,CAAyB,UAAAY,IAAI,EAAI;ADPrC,ACQQA,AFsBR,AFAA,ADDA,cKrBQA,IAAI,CDHkBhC,ACGjBiC,SAAL,CAAeC,GAAf,CAAmB,CDHkB,CAACjC,IAAhB,EAL9B,ACQQ;AACH,AFsBL,AFAA,ADDA,aKvBI;ADPJ,ACWI8B,AFqBJ,AFAA,ADDA,YKpBIA,QAAQ,CAACvB,aAAT,CAAuB,SAAvB,EAAkC2B,SAAlC,GAA8CJ,QAAQ,CAACvB,aAAT,CAAuB,SAAvB,EA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\r\n//definire funzioni da esportare. creo un modulo con certe funzioni. un modulo è un contenitore di cose (funzioni e/o variabili\r\n//questo modulo farà -fetch documento: prendere il doc e -parsing che significa prendere html e trasformarlo in dom\r\n\r\nasync function parseArticle(article){\r\n    //fetch of the article will give a complex object not only the text\r\n    //returns a Promise of Response obj\r\n    const articleResponse = await fetch(article)\r\n    //returns a Promise of String\r\n    const articleHtml = await articleResponse.text()\r\n    //trasformato il text in dom\r\n    const parser = new DOMParser();\r\n    const articleDocument = parser.parseFromString(articleHtml, \"text/html\");\r\n    //preso solo body\r\n    const body = articleDocument.querySelector(\"body\");\r\n    //create url from current article\r\n    const articleURL = new URL(article, window.location.href)\r\n    const pageURL = new URL(window.location.href)\r\n    //get article path (without file name)\r\n    const articlePath = articleURL.pathname.substring(0, articleURL.pathname.lastIndexOf(\"/\"))\r\n    body.querySelectorAll(\"img\").forEach(image => {\r\n        //Edit image src by appending the current article path\r\n        const url = new URL(image.src)\r\n        image.src = url.origin + articlePath + \"/\" + url.pathname.split(pageURL.pathname)[1]\r\n    })\r\n    return {\r\n        body: body,\r\n        title: articleDocument.querySelector(\"title\").text\r\n    }\r\n}\r\n\r\nexport {parseArticle}\r\n\r\n//this module will call this function and put in the general dom the one that we just generated with the previous module\r\n","//SCRIPT ORIGINARIO DELLA FRANCI di chiamata articolo\r\nimport {parseArticle} from \"./article-parser\"\r\n\r\n//funzione che serve per agg i doc al dom della pagina\r\nasync function addArticle(){\r\n    var article = await parseArticle(\"./articles/Bloomberg/ShihoFukada.html\")\r\n\r\n    console.log(article)\r\n    \r\n    //before adding the article, clear the page from jumbotron etc (they get hidden) to show only the reader\r\n    const elementsToDelete = document.querySelectorAll(\".jumbo, .tutorial\")\r\n    elementsToDelete.forEach(node => {\r\n        node.classList.add(\"hidden\");\r\n    }) \r\n\r\n    document.querySelector(\".reader\").className = document.querySelector(\".reader\").className.replace(/(?:^|\\s)hidden(?!\\S)/g, '')\r\n\r\n    //actually insert the new document\r\n    const container = document.querySelector(\".reader\")\r\n    const nodes = Array.from(article.body.childNodes)\r\n    nodes.forEach(node => {\r\n        container.appendChild(node)\r\n    })\r\n    \r\n}\r\n\r\nconst readerActivation = document.querySelector('.reader-activator');\r\nreaderActivation.addEventListener('click', addArticle);\r\n//FINE SCRIPT ORIGINARIO FRANCI\r\n\r\n\r\n//selezione stili\r\n//funzione stile 1\r\ndocument.querySelector('.style-selector-first').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './first.css';\r\n};\r\n\r\ndocument.querySelector('.style-selector-second').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './second.css';\r\n};\r\n\r\ndocument.querySelector('.style-selector-third').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './third.css';\r\n};\r\n\r\ndocument.querySelector('.style-selector-fourth').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './fourth.css';\r\n};\r\n\r\ndocument.querySelector('.style-selector-fifth').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './fifth.css';\r\n};\r\n\r\ndocument.querySelector('.style-selector-sixth').onclick = function () { \r\n    document.querySelector(\"link.secondSheet\").href = './sixth.css';\r\n};\r\n\r\n// Script lista documenti\r\n/* docs selection script: quando clicchi l'elemento con classe .doc-sel ti rivela togliendo 'hidden' la nav-list, \r\ndove è contenuta la lista documenti. */\r\n\r\nfunction docsList() {\r\n    document.querySelector(\".nav-list\").className = document.querySelector(\".nav-list\").className.replace(/(?:^|\\s)hidden(?!\\S)/g, '');\r\n}\r\n\r\nconst docsSelection = document.querySelectorAll('.doc-sel');\r\ndocsSelection.forEach(node => {\r\n    node.addEventListener('click', docsList);\r\n}) \r\n\r\n// Script chiusura lista documenti\r\n/*stessa cosa di sopra ma nasconde i documenti quando si richiude la sidebar*/\r\nfunction closeDocs() {\r\n    var v = document.querySelector(\".nav-list\"); \r\n    v.classList.add(\"hidden\"); \r\n}\r\n\r\nconst docsHidden = document.querySelector('.doc-close');\r\ndocsHidden.addEventListener('click', closeDocs);\r\n\r\n/*stessa cosa di sopra ma si attiva quando clicchi un documento */\r\nconst docsHiddenFromMenu = document.querySelectorAll('.close-menu-doc');\r\ndocsHiddenFromMenu.forEach(node => {\r\n    node.addEventListener('click', closeDocs);\r\n})\r\n\r\n/* sidebar drawer script */\r\nconst mainElement = document.querySelector('.container');\r\nconst openMenu = document.querySelectorAll('.opened-doc-list');\r\nconst closeMenu = document.querySelector('.close-menu');\r\nconst closeDocMenu = document.querySelectorAll('.close-menu-doc');\r\nconst toggleNavBar = () => {\r\n    mainElement.classList.toggle('opened-nav');\r\n};\r\n        \r\nopenMenu.forEach(node => {\r\n    node.addEventListener('click', toggleNavBar, false);\r\n}) \r\ncloseMenu.addEventListener('click', toggleNavBar, false);\r\ncloseDocMenu.forEach(node => {\r\n    node.addEventListener('click', toggleNavBar, false);\r\n}) "]}